{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/db/schema.ts"],"sourcesContent":["import { index, int, mysqlTableCreator, varchar } from \"drizzle-orm/mysql-core\";\n\nconst mySqlSchema = mysqlTableCreator((name) => `${name}_open-cdn`);\n\nexport const files = mySqlSchema(\n  \"files\",\n  {\n    // file id\n    id: int(\"id\").autoincrement().primaryKey(),\n    // file name\n    file_name: varchar(\"file_name\", { length: 255 }).notNull(),\n    // file size in bytes\n    byte_size: int(\"byte_size\").notNull(),\n    // file url\n    remote_url: varchar(\"remote_url\", { length: 255 }).notNull(),\n    // file hash\n    file_hash: varchar(\"hash\", { length: 255 }).notNull(),\n    // file mime type\n    mime_type: varchar(\"mime_type\", { length: 255 }).notNull(),\n    // file extension\n    file_extension: varchar(\"file_extension\", { length: 255 }).notNull(),\n    // file base64\n    file_base64: varchar(\"file_base64\", { length: 15000 }).notNull(),\n    // file width\n    file_width: int(\"file_width\").notNull(),\n    // file height\n    file_height: int(\"file_height\").notNull(),\n    // file quality\n    file_quality: int(\"file_quality\").notNull(),\n    // file created at\n    createdAt: int(\"created_at\").notNull(),\n  },\n  (table) => [\n    index(\"id\").on(table.id),\n    index(\"file_name\").on(table.file_name),\n    index(\"file_hash\").on(table.file_hash),\n    index(\"remote_url\").on(table.remote_url),\n  ],\n);\n"],"names":[],"mappings":";;;AAAA;AAAA;AAAA;AAAA;;AAEA,MAAM,cAAc,CAAA,GAAA,6OAAA,CAAA,oBAAiB,AAAD,EAAE,CAAC,OAAS,GAAG,KAAK,SAAS,CAAC;AAE3D,MAAM,QAAQ,YACnB,SACA;IACE,UAAU;IACV,IAAI,CAAA,GAAA,sPAAA,CAAA,MAAG,AAAD,EAAE,MAAM,aAAa,GAAG,UAAU;IACxC,YAAY;IACZ,WAAW,CAAA,GAAA,0PAAA,CAAA,UAAO,AAAD,EAAE,aAAa;QAAE,QAAQ;IAAI,GAAG,OAAO;IACxD,qBAAqB;IACrB,WAAW,CAAA,GAAA,sPAAA,CAAA,MAAG,AAAD,EAAE,aAAa,OAAO;IACnC,WAAW;IACX,YAAY,CAAA,GAAA,0PAAA,CAAA,UAAO,AAAD,EAAE,cAAc;QAAE,QAAQ;IAAI,GAAG,OAAO;IAC1D,YAAY;IACZ,WAAW,CAAA,GAAA,0PAAA,CAAA,UAAO,AAAD,EAAE,QAAQ;QAAE,QAAQ;IAAI,GAAG,OAAO;IACnD,iBAAiB;IACjB,WAAW,CAAA,GAAA,0PAAA,CAAA,UAAO,AAAD,EAAE,aAAa;QAAE,QAAQ;IAAI,GAAG,OAAO;IACxD,iBAAiB;IACjB,gBAAgB,CAAA,GAAA,0PAAA,CAAA,UAAO,AAAD,EAAE,kBAAkB;QAAE,QAAQ;IAAI,GAAG,OAAO;IAClE,cAAc;IACd,aAAa,CAAA,GAAA,0PAAA,CAAA,UAAO,AAAD,EAAE,eAAe;QAAE,QAAQ;IAAM,GAAG,OAAO;IAC9D,aAAa;IACb,YAAY,CAAA,GAAA,sPAAA,CAAA,MAAG,AAAD,EAAE,cAAc,OAAO;IACrC,cAAc;IACd,aAAa,CAAA,GAAA,sPAAA,CAAA,MAAG,AAAD,EAAE,eAAe,OAAO;IACvC,eAAe;IACf,cAAc,CAAA,GAAA,sPAAA,CAAA,MAAG,AAAD,EAAE,gBAAgB,OAAO;IACzC,kBAAkB;IAClB,WAAW,CAAA,GAAA,sPAAA,CAAA,MAAG,AAAD,EAAE,cAAc,OAAO;AACtC,GACA,CAAC,QAAU;QACT,CAAA,GAAA,+OAAA,CAAA,QAAK,AAAD,EAAE,MAAM,EAAE,CAAC,MAAM,EAAE;QACvB,CAAA,GAAA,+OAAA,CAAA,QAAK,AAAD,EAAE,aAAa,EAAE,CAAC,MAAM,SAAS;QACrC,CAAA,GAAA,+OAAA,CAAA,QAAK,AAAD,EAAE,aAAa,EAAE,CAAC,MAAM,SAAS;QACrC,CAAA,GAAA,+OAAA,CAAA,QAAK,AAAD,EAAE,cAAc,EAAE,CAAC,MAAM,UAAU;KACxC","debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/db/connection.ts"],"sourcesContent":["import \"dotenv/config\";\nimport { drizzle } from \"drizzle-orm/mysql2\";\n\nimport * as schema from \"./schema\";\n\n// You can specify any property from the mysql2 connection options\nexport const db = drizzle({\n  connection: process.env.DATABASE_URL!,\n  casing: \"snake_case\",\n  schema,\n  mode: \"default\",\n});\n"],"names":[],"mappings":";;;AAAA;AACA;AAEA;;;;AAGO,MAAM,KAAK,CAAA,GAAA,uPAAA,CAAA,UAAO,AAAD,EAAE;IACxB,YAAY,QAAQ,GAAG,CAAC,YAAY;IACpC,QAAQ;IACR,QAAA;IACA,MAAM;AACR","debugId":null}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/image/create-image-response.ts"],"sourcesContent":["import sharp from \"sharp\";\n\nexport interface CreateImageResponseArguments {\n  fileBuffer: Buffer;\n  filePath: string;\n  imageOptions: {\n    width?: string;\n    height?: string;\n    quality?: string;\n    format?: string;\n  };\n}\n\nexport const createImageResponse = async ({\n  fileBuffer,\n  filePath,\n  imageOptions,\n}: CreateImageResponseArguments) => {\n  try {\n    const { width, height, quality, format = \"png\" } = imageOptions;\n\n    if (!fileBuffer) {\n      return {\n        error: \"File not found\",\n        fileType: null,\n        response: null,\n      };\n    }\n\n    const supportedFileTypes = {\n      images: [\"jpg\", \"jpeg\", \"png\", \"gif\", \"webp\", \"avif\", \"ico\", \"svg\"],\n    };\n\n    const fileType = fileBuffer?.byteLength\n      ? (filePath.toString().split(\".\").pop() ?? null)\n      : null;\n\n    const isImageResponse = supportedFileTypes.images.includes(fileType ?? \"\");\n\n    if (!isImageResponse) {\n      return {\n        error: \"Unsupported file type\",\n        fileType: null,\n        response: null,\n      };\n    }\n\n    const isIco = fileType === \"ico\";\n\n    const sharpImage = !isIco\n      ? sharp(fileBuffer)\n      : {\n          resize: () => sharpImage,\n          toFormat: () => sharpImage,\n          toBuffer: async () => ({\n            data: Buffer.from(fileBuffer),\n            info: {\n              format: \"ico\",\n            },\n          }),\n          jpeg: () => sharpImage,\n          png: () => sharpImage,\n        };\n\n    if (width || height) {\n      sharpImage.resize(\n        width ? parseInt(width) : undefined,\n        height ? parseInt(height) : undefined,\n      );\n    }\n\n    if (quality) {\n      sharpImage.jpeg({ quality: parseInt(quality) });\n    }\n\n    if (format !== null && format !== undefined) {\n      sharpImage.toFormat(format as keyof sharp.FormatEnum);\n    }\n\n    const sharpImageToBuffer = await sharpImage.toBuffer({\n      resolveWithObject: true,\n    });\n\n    const { data: imageBuffer } = sharpImageToBuffer;\n\n    const fileName = filePath.split(\"/\").pop() ?? filePath;\n\n    const response = new Response(imageBuffer, {\n      headers: {\n        \"Content-Type\": isImageResponse\n          ? `image/${fileType}`\n          : \"application/octet-stream\",\n        \"Content-Length\": fileBuffer?.byteLength.toString() ?? \"0\",\n        \"Content-Disposition\": `filename=${fileName}`,\n      },\n      status: 200,\n    });\n\n    return {\n      error: null,\n      fileType,\n      response,\n    };\n  } catch (error) {\n    console.error(\"Error creating image response:\", error);\n    return {\n      error: \"Internal server error\",\n      fileType: null,\n      response: null,\n    };\n  }\n};\n"],"names":[],"mappings":";;;AAAA;;AAaO,MAAM,sBAAsB,OAAO,EACxC,UAAU,EACV,QAAQ,EACR,YAAY,EACiB;IAC7B,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,KAAK,EAAE,GAAG;QAEnD,IAAI,CAAC,YAAY;YACf,OAAO;gBACL,OAAO;gBACP,UAAU;gBACV,UAAU;YACZ;QACF;QAEA,MAAM,qBAAqB;YACzB,QAAQ;gBAAC;gBAAO;gBAAQ;gBAAO;gBAAO;gBAAQ;gBAAQ;gBAAO;aAAM;QACrE;QAEA,MAAM,WAAW,YAAY,aACxB,SAAS,QAAQ,GAAG,KAAK,CAAC,KAAK,GAAG,MAAM,OACzC;QAEJ,MAAM,kBAAkB,mBAAmB,MAAM,CAAC,QAAQ,CAAC,YAAY;QAEvE,IAAI,CAAC,iBAAiB;YACpB,OAAO;gBACL,OAAO;gBACP,UAAU;gBACV,UAAU;YACZ;QACF;QAEA,MAAM,QAAQ,aAAa;QAE3B,MAAM,aAAa,CAAC,QAChB,CAAA,GAAA,mGAAA,CAAA,UAAK,AAAD,EAAE,cACN;YACE,QAAQ,IAAM;YACd,UAAU,IAAM;YAChB,UAAU,UAAY,CAAC;oBACrB,MAAM,OAAO,IAAI,CAAC;oBAClB,MAAM;wBACJ,QAAQ;oBACV;gBACF,CAAC;YACD,MAAM,IAAM;YACZ,KAAK,IAAM;QACb;QAEJ,IAAI,SAAS,QAAQ;YACnB,WAAW,MAAM,CACf,QAAQ,SAAS,SAAS,WAC1B,SAAS,SAAS,UAAU;QAEhC;QAEA,IAAI,SAAS;YACX,WAAW,IAAI,CAAC;gBAAE,SAAS,SAAS;YAAS;QAC/C;QAEA,IAAI,WAAW,QAAQ,WAAW,WAAW;YAC3C,WAAW,QAAQ,CAAC;QACtB;QAEA,MAAM,qBAAqB,MAAM,WAAW,QAAQ,CAAC;YACnD,mBAAmB;QACrB;QAEA,MAAM,EAAE,MAAM,WAAW,EAAE,GAAG;QAE9B,MAAM,WAAW,SAAS,KAAK,CAAC,KAAK,GAAG,MAAM;QAE9C,MAAM,WAAW,IAAI,SAAS,aAAa;YACzC,SAAS;gBACP,gBAAgB,kBACZ,CAAC,MAAM,EAAE,UAAU,GACnB;gBACJ,kBAAkB,YAAY,WAAW,cAAc;gBACvD,uBAAuB,CAAC,SAAS,EAAE,UAAU;YAC/C;YACA,QAAQ;QACV;QAEA,OAAO;YACL,OAAO;YACP;YACA;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO;YACL,OAAO;YACP,UAAU;YACV,UAAU;QACZ;IACF;AACF","debugId":null}},
    {"offset": {"line": 370, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/cache/utils.ts"],"sourcesContent":["import { createHash } from \"crypto\";\n\nexport const createCacheHash = (url: string) => {\n  const hasher = (input: string) =>\n    createHash(\"sha256\").update(input).digest(\"hex\");\n\n  const forwardUrlHash = hasher(url);\n  const reverseUrlHash = hasher(url.split(\"\").reverse().join(\"\"));\n\n  return `${forwardUrlHash}:${reverseUrlHash}`;\n};\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,kBAAkB,CAAC;IAC9B,MAAM,SAAS,CAAC,QACd,CAAA,GAAA,qGAAA,CAAA,aAAU,AAAD,EAAE,UAAU,MAAM,CAAC,OAAO,MAAM,CAAC;IAE5C,MAAM,iBAAiB,OAAO;IAC9B,MAAM,iBAAiB,OAAO,IAAI,KAAK,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC;IAE3D,OAAO,GAAG,eAAe,CAAC,EAAE,gBAAgB;AAC9C","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/cache/get-cache.ts"],"sourcesContent":["import { db } from \"../db/connection\";\nimport {\n  CreateImageResponseArguments,\n  createImageResponse,\n} from \"../image/create-image-response\";\nimport { createCacheHash } from \"./utils\";\n\nexport const getFileCache = async (\n  url: string,\n  imageOptions: CreateImageResponseArguments[\"imageOptions\"],\n) => {\n  const { width, height, quality, format } = imageOptions;\n  const cacheKey = createCacheHash(\n    `${url}_${width}_${height}_${quality}_${format}`,\n  );\n  const cache = await db.query.files.findFirst({\n    where: (files, { eq }) =>\n      eq(files.file_hash, cacheKey) && eq(files.remote_url, url),\n  });\n\n  if (cache) {\n    const cachedResponse = await createImageResponse({\n      fileBuffer: Buffer.from(cache.file_base64, \"base64\"),\n      filePath: cache.file_name,\n      imageOptions: { width, height, quality, format },\n    });\n    if (cachedResponse.error) {\n      return {\n        error: cachedResponse.error,\n        fileType: null,\n        response: null,\n      };\n    }\n    if (!cachedResponse.fileType || !cachedResponse.response) {\n      return {\n        error: \"File not found\",\n        fileType: null,\n        response: null,\n      };\n    }\n    return {\n      error: null,\n      fileType: cachedResponse.fileType,\n      response: cachedResponse.response,\n    };\n  }\n\n  return {\n    error: \"File not cached\",\n    fileType: null,\n    response: null,\n  };\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AAIA;;;;AAEO,MAAM,eAAe,OAC1B,KACA;IAEA,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG;IAC3C,MAAM,WAAW,CAAA,GAAA,uHAAA,CAAA,kBAAe,AAAD,EAC7B,GAAG,IAAI,CAAC,EAAE,MAAM,CAAC,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC,EAAE,QAAQ;IAElD,MAAM,QAAQ,MAAM,yHAAA,CAAA,KAAE,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC;QAC3C,OAAO,CAAC,OAAO,EAAE,EAAE,EAAE,GACnB,GAAG,MAAM,SAAS,EAAE,aAAa,GAAG,MAAM,UAAU,EAAE;IAC1D;IAEA,IAAI,OAAO;QACT,MAAM,iBAAiB,MAAM,CAAA,GAAA,6IAAA,CAAA,sBAAmB,AAAD,EAAE;YAC/C,YAAY,OAAO,IAAI,CAAC,MAAM,WAAW,EAAE;YAC3C,UAAU,MAAM,SAAS;YACzB,cAAc;gBAAE;gBAAO;gBAAQ;gBAAS;YAAO;QACjD;QACA,IAAI,eAAe,KAAK,EAAE;YACxB,OAAO;gBACL,OAAO,eAAe,KAAK;gBAC3B,UAAU;gBACV,UAAU;YACZ;QACF;QACA,IAAI,CAAC,eAAe,QAAQ,IAAI,CAAC,eAAe,QAAQ,EAAE;YACxD,OAAO;gBACL,OAAO;gBACP,UAAU;gBACV,UAAU;YACZ;QACF;QACA,OAAO;YACL,OAAO;YACP,UAAU,eAAe,QAAQ;YACjC,UAAU,eAAe,QAAQ;QACnC;IACF;IAEA,OAAO;QACL,OAAO;QACP,UAAU;QACV,UAAU;IACZ;AACF","debugId":null}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/cache/set-cache.ts"],"sourcesContent":["import { db } from \"../db/connection\";\nimport { files } from \"../db/schema\";\nimport { CreateImageResponseArguments } from \"../image/create-image-response\";\nimport { createCacheHash } from \"./utils\";\n\nexport const setFileCache = async (\n  fileBuffer: Buffer<ArrayBuffer>,\n  url: string,\n  mimeType: string,\n  imageOptions: CreateImageResponseArguments[\"imageOptions\"],\n) => {\n  const { width, height, quality, format } = imageOptions;\n  const cacheKey = createCacheHash(\n    `${url}_${width}_${height}_${quality}_${format}`,\n  );\n\n  const safeParseToNumber = (value: unknown) => {\n    if (typeof value === \"number\") {\n      return value;\n    } else if (typeof value === \"string\") {\n      const parsedValue = parseInt(value, 10);\n      return isNaN(parsedValue) ? 100 : parsedValue;\n    }\n    return 100;\n  };\n\n  // Assuming you have a function to insert the cache into your database\n  const insertedCache = await db\n    .insert(files)\n    .values({\n      file_name: url.split(\"/\").pop() ?? \"unknown\",\n      byte_size: fileBuffer.byteLength,\n      remote_url: url,\n      file_hash: cacheKey,\n      mime_type: mimeType,\n      file_extension: format ?? mimeType.split(\"/\")[1],\n      file_base64: fileBuffer.toString(\"base64\"),\n      file_width: safeParseToNumber(width ?? 100),\n      file_height: safeParseToNumber(height ?? 100),\n      file_quality: safeParseToNumber(quality ?? 100),\n      createdAt: Math.floor(Date.now() / 1000),\n    })\n    .execute();\n\n  if (insertedCache[0].affectedRows === 0) {\n    return {\n      error: \"Failed to insert cache\",\n      fileType: null,\n      response: null,\n    };\n  }\n\n  return insertedCache;\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AAEA;;;;AAEO,MAAM,eAAe,OAC1B,YACA,KACA,UACA;IAEA,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG;IAC3C,MAAM,WAAW,CAAA,GAAA,uHAAA,CAAA,kBAAe,AAAD,EAC7B,GAAG,IAAI,CAAC,EAAE,MAAM,CAAC,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC,EAAE,QAAQ;IAGlD,MAAM,oBAAoB,CAAC;QACzB,IAAI,OAAO,UAAU,UAAU;YAC7B,OAAO;QACT,OAAO,IAAI,OAAO,UAAU,UAAU;YACpC,MAAM,cAAc,SAAS,OAAO;YACpC,OAAO,MAAM,eAAe,MAAM;QACpC;QACA,OAAO;IACT;IAEA,sEAAsE;IACtE,MAAM,gBAAgB,MAAM,yHAAA,CAAA,KAAE,CAC3B,MAAM,CAAC,qHAAA,CAAA,QAAK,EACZ,MAAM,CAAC;QACN,WAAW,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM;QACnC,WAAW,WAAW,UAAU;QAChC,YAAY;QACZ,WAAW;QACX,WAAW;QACX,gBAAgB,UAAU,SAAS,KAAK,CAAC,IAAI,CAAC,EAAE;QAChD,aAAa,WAAW,QAAQ,CAAC;QACjC,YAAY,kBAAkB,SAAS;QACvC,aAAa,kBAAkB,UAAU;QACzC,cAAc,kBAAkB,WAAW;QAC3C,WAAW,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK;IACrC,GACC,OAAO;IAEV,IAAI,aAAa,CAAC,EAAE,CAAC,YAAY,KAAK,GAAG;QACvC,OAAO;YACL,OAAO;YACP,UAAU;YACV,UAAU;QACZ;IACF;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/file-path/get-file-buffer.ts"],"sourcesContent":["export const getFileBufferFromUrl = async (url: string) => {\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`Failed to fetch file from URL: ${response.statusText}`);\n    }\n\n    const arrayBuffer = await response.arrayBuffer();\n    const buffer = Buffer.from(arrayBuffer);\n\n    return buffer;\n  } catch (error) {\n    console.error(\"Error fetching file buffer:\", error);\n    return null;\n  }\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,uBAAuB,OAAO;IACzC,IAAI;QACF,MAAM,WAAW,MAAM,MAAM;QAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,+BAA+B,EAAE,SAAS,UAAU,EAAE;QACzE;QAEA,MAAM,cAAc,MAAM,SAAS,WAAW;QAC9C,MAAM,SAAS,OAAO,IAAI,CAAC;QAE3B,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 518, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/file-path/get-url.ts"],"sourcesContent":["export const getFileUrl = ({\n  proto,\n  domain,\n  tld,\n  filepath,\n}: {\n  proto: string;\n  domain: string;\n  tld: string;\n  filepath: string;\n}) => {\n  try {\n    return {\n      url: new URL(`${proto}://${domain}.${tld}/${filepath}`),\n      error: null,\n    };\n  } catch (error) {\n    console.error(\"Error creating URL:\", error);\n    return {\n      url: null,\n      error: \"Invalid URL\",\n    };\n  }\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,aAAa,CAAC,EACzB,KAAK,EACL,MAAM,EACN,GAAG,EACH,QAAQ,EAMT;IACC,IAAI;QACF,OAAO;YACL,KAAK,IAAI,IAAI,GAAG,MAAM,GAAG,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,UAAU;YACtD,OAAO;QACT;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO;YACL,KAAK;YACL,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 541, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/image/get-image-params.ts"],"sourcesContent":["export const getImageParams = (c: Record<string, string>) =>\n  Object.keys(c).reduce(\n    (acc, key) => {\n      acc[key as keyof typeof acc] = c[key];\n\n      return acc;\n    },\n    {} as {\n      width?: string;\n      height?: string;\n      quality?: string;\n      format?: string;\n    },\n  );\n"],"names":[],"mappings":";;;AAAO,MAAM,iBAAiB,CAAC,IAC7B,OAAO,IAAI,CAAC,GAAG,MAAM,CACnB,CAAC,KAAK;QACJ,GAAG,CAAC,IAAwB,GAAG,CAAC,CAAC,IAAI;QAErC,OAAO;IACT,GACA,CAAC","debugId":null}},
    {"offset": {"line": 554, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/image/supported-file-types.ts"],"sourcesContent":["export const supportedFileTypes = {\n  images: [\"jpg\", \"jpeg\", \"png\", \"gif\", \"webp\", \"avif\", \"ico\", \"svg\"],\n} as const;\n\nexport const supportedFileTypesRegexPattern = Object.values(supportedFileTypes)\n  .map((type) => type.join(\"|\"))\n  .join(\"|\");\n\nexport const findSupportedFileType = (filePath: string) => {\n  // Extract the file extension from the file path\n  const fileExtension = filePath.split(\".\").pop();\n  if (!fileExtension) {\n    return null;\n  }\n  // Check if the file extension is in the supported file types\n  const isSupported = Object.values(supportedFileTypes).some((type) =>\n    type.includes(fileExtension as any),\n  );\n  return isSupported ? fileExtension : null;\n};\n"],"names":[],"mappings":";;;;;AAAO,MAAM,qBAAqB;IAChC,QAAQ;QAAC;QAAO;QAAQ;QAAO;QAAO;QAAQ;QAAQ;QAAO;KAAM;AACrE;AAEO,MAAM,iCAAiC,OAAO,MAAM,CAAC,oBACzD,GAAG,CAAC,CAAC,OAAS,KAAK,IAAI,CAAC,MACxB,IAAI,CAAC;AAED,MAAM,wBAAwB,CAAC;IACpC,gDAAgD;IAChD,MAAM,gBAAgB,SAAS,KAAK,CAAC,KAAK,GAAG;IAC7C,IAAI,CAAC,eAAe;QAClB,OAAO;IACT;IACA,6DAA6D;IAC7D,MAAM,cAAc,OAAO,MAAM,CAAC,oBAAoB,IAAI,CAAC,CAAC,OAC1D,KAAK,QAAQ,CAAC;IAEhB,OAAO,cAAc,gBAAgB;AACvC","debugId":null}},
    {"offset": {"line": 588, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/image/image-response-logic.ts"],"sourcesContent":["import { eq } from \"drizzle-orm\";\nimport { Context } from \"hono\";\nimport { z } from \"zod\";\n\nimport { getFileCache } from \"../cache/get-cache\";\nimport { setFileCache } from \"../cache/set-cache\";\nimport { createCacheHash } from \"../cache/utils\";\nimport { db } from \"../db/connection\";\nimport { files } from \"../db/schema\";\nimport { getFileBufferFromUrl } from \"../file-path/get-file-buffer\";\nimport { getFileUrl } from \"../file-path/get-url\";\nimport { createImageResponse } from \"./create-image-response\";\nimport { getImageParams } from \"./get-image-params\";\nimport { findSupportedFileType } from \"./supported-file-types\";\n\nconst getParams = (c: Context, isDirectQuery?: boolean) => {\n  const params = c.req.param();\n  const searchParams = c.req.query();\n\n  if (isDirectQuery) {\n    const urlParam = searchParams[\"dq-url\"];\n\n    if (!urlParam) {\n      return {\n        error: \"Invalid URL parameters\",\n        params: {\n          searchParams,\n          isDirectQuery,\n        },\n      };\n    }\n\n    const url = new URL(urlParam);\n\n    const dqPrefixedSearchParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(searchParams)) {\n      if (key !== \"dq-url\") {\n        const unprefixedKey = key.replace(/^dq-/, \"\");\n        dqPrefixedSearchParams.set(unprefixedKey, `${value}`);\n      }\n    }\n\n    return {\n      error: null,\n      params: {\n        ...params,\n        proto: url.protocol.replace(\":\", \"\"),\n        domain: url.hostname.split(\".\").slice(0, -1).join(\".\"),\n        tld: url.hostname.split(\".\").at(-1),\n        filepath: url.pathname,\n      },\n      searchParams: dqPrefixedSearchParams,\n    };\n  }\n  return {\n    error: null,\n    params,\n    searchParams,\n  };\n};\n\nexport const returnImageResponseFromContext = async (\n  c: Context,\n  logicOptions?: {\n    isDirectQuery?: boolean;\n  },\n) => {\n  const {\n    params,\n    searchParams,\n    error: paramsError,\n  } = getParams(c, logicOptions?.isDirectQuery);\n\n  if (paramsError) {\n    return c.json(\n      {\n        error: paramsError,\n        details: params,\n      },\n      { status: 400 },\n    );\n  }\n\n  const paramValidator = z.object({\n    proto: z.enum([\"http\", \"https\"]),\n    domain: z.string().min(1),\n    tld: z.string().min(2),\n    filepath: z.string(),\n  });\n\n  const validationResult = paramValidator.safeParse(params);\n\n  if (!validationResult.success || !searchParams) {\n    return c.json(\n      {\n        error: \"Invalid URL parameters\",\n        details: validationResult.error?.format(),\n        input: params,\n      },\n      { status: 400 },\n    );\n  }\n\n  const filePath = findSupportedFileType(validationResult.data.filepath);\n\n  if (!filePath) {\n    return c.json(\n      {\n        error: \"File type not supported or not defined\",\n      },\n      { status: 415 },\n    );\n  }\n\n  const file = getFileUrl(validationResult.data);\n\n  if (file.error || !file.url) {\n    return c.json(\n      {\n        error: \"File not found\",\n        details: file.error,\n      },\n      { status: 404 },\n    );\n  }\n\n  const { width, height, quality, format } = getImageParams(\n    searchParams as Record<string, string>,\n  );\n\n  const cache = await getFileCache(file.url.href.toString(), {\n    width,\n    height,\n    quality,\n    format,\n  });\n\n  if (cache && cache.response !== null) {\n    return cache.response;\n  }\n\n  const fileBuffer = await getFileBufferFromUrl(file.url.href.toString());\n\n  if (!fileBuffer || fileBuffer.byteLength === 0 || !filePath) {\n    return c.json(\n      {\n        error: \"File not found\",\n        details: {\n          file,\n          msg: \"File buffer is empty or undefined\",\n        },\n      },\n      { status: 404 },\n    );\n  }\n\n  const imageFileResponse = await createImageResponse({\n    fileBuffer,\n    filePath: validationResult.data.filepath,\n    imageOptions: { width, height, quality, format },\n  });\n\n  if (imageFileResponse.error) {\n    return c.json(\n      {\n        error: imageFileResponse.error,\n      },\n      { status: 500 },\n    );\n  }\n\n  if (!imageFileResponse.fileType || !imageFileResponse.response) {\n    return c.json(\n      {\n        error: \"File not found\",\n      },\n      { status: 404 },\n    );\n  }\n\n  const fileHash = createCacheHash(\n    `${filePath}_${width}_${height}_${quality}_${format}`,\n  );\n\n  const doesExist = await db\n    .selectDistinct()\n    .from(files)\n    .where(eq(files.file_hash, fileHash))\n    .execute();\n\n  if (doesExist.length === 0) {\n    // only create cache if at this point there's no existing cache\n    setFileCache(fileBuffer, file.url.href, imageFileResponse.fileType, {\n      width,\n      height,\n      quality,\n      format,\n    });\n  }\n\n  return imageFileResponse.response;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 766, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/utils/date-time/converts.ts"],"sourcesContent":["const _OFFSETS = {\n  ms: 1,\n  seconds: 1000,\n  minutes: 1000 * 60,\n  hours: 1000 * 60 * 60,\n  days: 1000 * 60 * 60 * 24,\n  weeks: 1000 * 60 * 60 * 24 * 7,\n  months: 1000 * 60 * 60 * 24 * 30,\n} as const;\n\ntype Offsets = typeof _OFFSETS;\n\nexport class DateTimeConverter {\n  public static readonly $__OFFSETS: Offsets = _OFFSETS;\n\n  private static getOffsetByKey(key: keyof Offsets) {\n    return this.$__OFFSETS[key];\n  }\n\n  public static convertToMilliseconds(key: keyof Offsets, value: number) {\n    const offset = this.getOffsetByKey(key);\n\n    if (!offset) {\n      throw new Error(\"Invalid time unit\");\n    }\n\n    return value * offset;\n  }\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,WAAW;IACf,IAAI;IACJ,SAAS;IACT,SAAS,OAAO;IAChB,OAAO,OAAO,KAAK;IACnB,MAAM,OAAO,KAAK,KAAK;IACvB,OAAO,OAAO,KAAK,KAAK,KAAK;IAC7B,QAAQ,OAAO,KAAK,KAAK,KAAK;AAChC;AAIO,MAAM;IACX,OAAuB,aAAsB,SAAS;IAEtD,OAAe,eAAe,GAAkB,EAAE;QAChD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI;IAC7B;IAEA,OAAc,sBAAsB,GAAkB,EAAE,KAAa,EAAE;QACrE,MAAM,SAAS,IAAI,CAAC,cAAc,CAAC;QAEnC,IAAI,CAAC,QAAQ;YACX,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,QAAQ;IACjB;AACF","debugId":null}},
    {"offset": {"line": 797, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/app/api/%5B...routes%5D/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\n\nimport { returnImageResponseFromContext } from \"../../../image/image-response-logic\";\nimport { supportedFileTypesRegexPattern } from \"../../../image/supported-file-types\";\nimport { DateTimeConverter } from \"../../../utils/date-time/converts\";\n\nexport const GET = async (req: Request) => {\n  const url = req.url;\n  const pathname = new URL(url).pathname;\n\n  let params = pathname.split(\"/\").slice(1);\n  const isDirectQuery = params[0] === \"direct-query\";\n\n  if (isDirectQuery) {\n    const searchParams = new URL(req.url).searchParams;\n    const remoteUrl = searchParams.get(\"dq-url\");\n    if (!remoteUrl) {\n      return NextResponse.json({\n        error: \"Invalid URL parameters\",\n        details: {\n          remoteUrl,\n        },\n      });\n    }\n    const url = new URL(remoteUrl);\n    const proto = url.protocol.replace(\":\", \"\");\n    const domain = url.hostname.split(\".\").slice(0, -1).join(\".\");\n    const tld = url.hostname.split(\".\").at(-1);\n    const filepath = url.pathname;\n    const fileType = filepath.match(new RegExp(supportedFileTypesRegexPattern));\n\n    if (!proto || !domain || !tld || !filepath || !fileType) {\n      return NextResponse.json({\n        error: \"Invalid URL parameters\",\n        details: {\n          proto,\n          domain,\n          tld,\n          filepath,\n          fileType,\n        },\n      });\n    }\n\n    params[0] = proto;\n    params[1] = domain;\n    params[2] = tld;\n    params[3] = filepath;\n  }\n\n  const proto = params[0];\n  const domain = params[1];\n  const tld = params[2];\n  // filepath is any after tld\n  const filepath = params.slice(3).join(\"/\");\n  const fileType = filepath.match(new RegExp(supportedFileTypesRegexPattern));\n\n  if (!proto || !domain || !tld || !filepath || !fileType) {\n    return NextResponse.json({\n      error: \"Invalid URL parameters\",\n      details: {\n        proto,\n        domain,\n        tld,\n        filepath,\n        fileType,\n      },\n    });\n  }\n\n  const response = await returnImageResponseFromContext(\n    {\n      req: {\n        param: () => ({\n          proto,\n          domain,\n          tld,\n          filepath,\n        }),\n        query: () => {\n          const searchParams = new URL(req.url).searchParams;\n          const params: Record<string, string> = {};\n          for (const [key, value] of searchParams.entries()) {\n            params[key] = value;\n          }\n          return params;\n        },\n      },\n      json: (data: any) => {\n        return NextResponse.json(data);\n      },\n    } as any,\n    {\n      isDirectQuery,\n    },\n  );\n\n  response.headers.set(\n    \"Cache-Control\",\n    `public, max-age=${DateTimeConverter.convertToMilliseconds(\n      \"days\",\n      7,\n    )}, immutable`,\n  );\n  response.headers.set(\"Vary\", \"Accept-Encoding\");\n  response.headers.set(\"Access-Control-Allow-Origin\", \"*\");\n  response.headers.set(\"Access-Control-Allow-Methods\", \"*\");\n  response.headers.set(\"Access-Control-Allow-Headers\", \"*\");\n\n  return response;\n};\n"],"names":[],"mappings":"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","debugId":null}}]
}