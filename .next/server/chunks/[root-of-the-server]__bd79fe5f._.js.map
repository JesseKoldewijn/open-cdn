{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/image/supported-file-types.ts"],"sourcesContent":["export const supportedFileTypes = {\n\timages: [\"jpg\", \"jpeg\", \"png\", \"gif\", \"webp\", \"avif\", \"ico\", \"svg\"],\n} as const;\n\nexport const supportedFileTypesRegexPattern = Object.values(supportedFileTypes)\n\t.map((type) => type.join(\"|\"))\n\t.join(\"|\");\n\nexport const findSupportedFileType = (filePath: string) => {\n\t// Extract the file extension from the file path\n\tconst fileExtension = filePath.split(\".\").pop();\n\tif (!fileExtension) {\n\t\treturn null;\n\t}\n\t// Check if the file extension is in the supported file types\n\tconst isSupported = Object.values(supportedFileTypes).some((type) =>\n\t\ttype.includes(fileExtension as any)\n\t);\n\treturn isSupported ? fileExtension : null;\n};\n"],"names":[],"mappings":";;;;;AAAO,MAAM,qBAAqB;IACjC,QAAQ;QAAC;QAAO;QAAQ;QAAO;QAAO;QAAQ;QAAQ;QAAO;KAAM;AACpE;AAEO,MAAM,iCAAiC,OAAO,MAAM,CAAC,oBAC1D,GAAG,CAAC,CAAC,OAAS,KAAK,IAAI,CAAC,MACxB,IAAI,CAAC;AAEA,MAAM,wBAAwB,CAAC;IACrC,gDAAgD;IAChD,MAAM,gBAAgB,SAAS,KAAK,CAAC,KAAK,GAAG;IAC7C,IAAI,CAAC,eAAe;QACnB,OAAO;IACR;IACA,6DAA6D;IAC7D,MAAM,cAAc,OAAO,MAAM,CAAC,oBAAoB,IAAI,CAAC,CAAC,OAC3D,KAAK,QAAQ,CAAC;IAEf,OAAO,cAAc,gBAAgB;AACtC","debugId":null}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/db/schema.ts"],"sourcesContent":["import { index, int, varchar, mysqlTableCreator } from \"drizzle-orm/mysql-core\";\n\nconst mySqlSchema = mysqlTableCreator((name) => `${name}_open-cdn`);\n\nexport const files = mySqlSchema(\n\t\"files\",\n\t{\n\t\t// file id\n\t\tid: int(\"id\").autoincrement().primaryKey(),\n\t\t// file name\n\t\tfile_name: varchar(\"file_name\", { length: 255 }).notNull(),\n\t\t// file size in bytes\n\t\tbyte_size: int(\"byte_size\").notNull(),\n\t\t// file url\n\t\tremote_url: varchar(\"remote_url\", { length: 255 }).notNull(),\n\t\t// file hash\n\t\tfile_hash: varchar(\"hash\", { length: 255 }).notNull(),\n\t\t// file mime type\n\t\tmime_type: varchar(\"mime_type\", { length: 255 }).notNull(),\n\t\t// file extension\n\t\tfile_extension: varchar(\"file_extension\", { length: 255 }).notNull(),\n\t\t// file base64\n\t\tfile_base64: varchar(\"file_base64\", { length: 15000 }).notNull(),\n\t\t// file width\n\t\tfile_width: int(\"file_width\").notNull(),\n\t\t// file height\n\t\tfile_height: int(\"file_height\").notNull(),\n\t\t// file quality\n\t\tfile_quality: int(\"file_quality\").notNull(),\n\t\t// file created at\n\t\tcreatedAt: int(\"created_at\").notNull(),\n\t},\n\t(table) => [\n\t\tindex(\"id\").on(table.id),\n\t\tindex(\"file_name\").on(table.file_name),\n\t\tindex(\"file_hash\").on(table.file_hash),\n\t\tindex(\"remote_url\").on(table.remote_url),\n\t]\n);\n"],"names":[],"mappings":";;;AAAA;AAAA;AAAA;AAAA;;AAEA,MAAM,cAAc,CAAA,GAAA,6OAAA,CAAA,oBAAiB,AAAD,EAAE,CAAC,OAAS,GAAG,KAAK,SAAS,CAAC;AAE3D,MAAM,QAAQ,YACpB,SACA;IACC,UAAU;IACV,IAAI,CAAA,GAAA,sPAAA,CAAA,MAAG,AAAD,EAAE,MAAM,aAAa,GAAG,UAAU;IACxC,YAAY;IACZ,WAAW,CAAA,GAAA,0PAAA,CAAA,UAAO,AAAD,EAAE,aAAa;QAAE,QAAQ;IAAI,GAAG,OAAO;IACxD,qBAAqB;IACrB,WAAW,CAAA,GAAA,sPAAA,CAAA,MAAG,AAAD,EAAE,aAAa,OAAO;IACnC,WAAW;IACX,YAAY,CAAA,GAAA,0PAAA,CAAA,UAAO,AAAD,EAAE,cAAc;QAAE,QAAQ;IAAI,GAAG,OAAO;IAC1D,YAAY;IACZ,WAAW,CAAA,GAAA,0PAAA,CAAA,UAAO,AAAD,EAAE,QAAQ;QAAE,QAAQ;IAAI,GAAG,OAAO;IACnD,iBAAiB;IACjB,WAAW,CAAA,GAAA,0PAAA,CAAA,UAAO,AAAD,EAAE,aAAa;QAAE,QAAQ;IAAI,GAAG,OAAO;IACxD,iBAAiB;IACjB,gBAAgB,CAAA,GAAA,0PAAA,CAAA,UAAO,AAAD,EAAE,kBAAkB;QAAE,QAAQ;IAAI,GAAG,OAAO;IAClE,cAAc;IACd,aAAa,CAAA,GAAA,0PAAA,CAAA,UAAO,AAAD,EAAE,eAAe;QAAE,QAAQ;IAAM,GAAG,OAAO;IAC9D,aAAa;IACb,YAAY,CAAA,GAAA,sPAAA,CAAA,MAAG,AAAD,EAAE,cAAc,OAAO;IACrC,cAAc;IACd,aAAa,CAAA,GAAA,sPAAA,CAAA,MAAG,AAAD,EAAE,eAAe,OAAO;IACvC,eAAe;IACf,cAAc,CAAA,GAAA,sPAAA,CAAA,MAAG,AAAD,EAAE,gBAAgB,OAAO;IACzC,kBAAkB;IAClB,WAAW,CAAA,GAAA,sPAAA,CAAA,MAAG,AAAD,EAAE,cAAc,OAAO;AACrC,GACA,CAAC,QAAU;QACV,CAAA,GAAA,+OAAA,CAAA,QAAK,AAAD,EAAE,MAAM,EAAE,CAAC,MAAM,EAAE;QACvB,CAAA,GAAA,+OAAA,CAAA,QAAK,AAAD,EAAE,aAAa,EAAE,CAAC,MAAM,SAAS;QACrC,CAAA,GAAA,+OAAA,CAAA,QAAK,AAAD,EAAE,aAAa,EAAE,CAAC,MAAM,SAAS;QACrC,CAAA,GAAA,+OAAA,CAAA,QAAK,AAAD,EAAE,cAAc,EAAE,CAAC,MAAM,UAAU;KACvC","debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/db/connection.ts"],"sourcesContent":["import \"dotenv/config\";\nimport { drizzle } from \"drizzle-orm/mysql2\";\n\nimport * as schema from \"./schema\";\n\n// You can specify any property from the mysql2 connection options\nexport const db = drizzle({\n\tconnection: process.env.DATABASE_URL!,\n\tcasing: \"snake_case\",\n\tschema,\n\tmode: \"default\",\n});\n"],"names":[],"mappings":";;;AAAA;AACA;AAEA;;;;AAGO,MAAM,KAAK,CAAA,GAAA,uPAAA,CAAA,UAAO,AAAD,EAAE;IACzB,YAAY,QAAQ,GAAG,CAAC,YAAY;IACpC,QAAQ;IACR,QAAA;IACA,MAAM;AACP","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/image/create-image-response.ts"],"sourcesContent":["import sharp from \"sharp\";\n\nexport interface CreateImageResponseArguments {\n\tfileBuffer: Buffer;\n\tfilePath: string;\n\timageOptions: {\n\t\twidth?: string;\n\t\theight?: string;\n\t\tquality?: string;\n\t\tformat?: string;\n\t};\n}\n\nexport const createImageResponse = async ({\n\tfileBuffer,\n\tfilePath,\n\timageOptions,\n}: CreateImageResponseArguments) => {\n\ttry {\n\t\tconst { width, height, quality, format = \"png\" } = imageOptions;\n\n\t\tif (!fileBuffer) {\n\t\t\treturn {\n\t\t\t\terror: \"File not found\",\n\t\t\t\tfileType: null,\n\t\t\t\tresponse: null,\n\t\t\t};\n\t\t}\n\n\t\tconst supportedFileTypes = {\n\t\t\timages: [\"jpg\", \"jpeg\", \"png\", \"gif\", \"webp\", \"avif\", \"ico\", \"svg\"],\n\t\t};\n\n\t\tconst fileType = fileBuffer?.byteLength\n\t\t\t? filePath.toString().split(\".\").pop() ?? null\n\t\t\t: null;\n\n\t\tconst isImageResponse = supportedFileTypes.images.includes(\n\t\t\tfileType ?? \"\"\n\t\t);\n\n\t\tif (!isImageResponse) {\n\t\t\treturn {\n\t\t\t\terror: \"Unsupported file type\",\n\t\t\t\tfileType: null,\n\t\t\t\tresponse: null,\n\t\t\t};\n\t\t}\n\n\t\tconst isIco = fileType === \"ico\";\n\n\t\tconst sharpImage = !isIco\n\t\t\t? sharp(fileBuffer)\n\t\t\t: {\n\t\t\t\t\tresize: () => sharpImage,\n\t\t\t\t\ttoFormat: () => sharpImage,\n\t\t\t\t\ttoBuffer: async () => ({\n\t\t\t\t\t\tdata: Buffer.from(fileBuffer),\n\t\t\t\t\t\tinfo: {\n\t\t\t\t\t\t\tformat: \"ico\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\tjpeg: () => sharpImage,\n\t\t\t\t\tpng: () => sharpImage,\n\t\t\t  };\n\n\t\tif (width || height) {\n\t\t\tsharpImage.resize(\n\t\t\t\twidth ? parseInt(width) : undefined,\n\t\t\t\theight ? parseInt(height) : undefined\n\t\t\t);\n\t\t}\n\n\t\tif (quality) {\n\t\t\tsharpImage.jpeg({ quality: parseInt(quality) });\n\t\t}\n\n\t\tif (format !== null && format !== undefined) {\n\t\t\tsharpImage.toFormat(format as keyof sharp.FormatEnum);\n\t\t}\n\n\t\tconst sharpImageToBuffer = await sharpImage.toBuffer({\n\t\t\tresolveWithObject: true,\n\t\t});\n\n\t\tconst { data: imageBuffer } = sharpImageToBuffer;\n\n\t\tconst fileName = filePath.split(\"/\").pop() ?? filePath;\n\n\t\tconst response = new Response(imageBuffer, {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": isImageResponse\n\t\t\t\t\t? `image/${fileType}`\n\t\t\t\t\t: \"application/octet-stream\",\n\t\t\t\t\"Content-Length\": fileBuffer?.byteLength.toString() ?? \"0\",\n\t\t\t\t\"Content-Disposition\": `filename=${fileName}`,\n\t\t\t},\n\t\t\tstatus: 200,\n\t\t});\n\n\t\treturn {\n\t\t\terror: null,\n\t\t\tfileType,\n\t\t\tresponse,\n\t\t};\n\t} catch (error) {\n\t\tconsole.error(\"Error creating image response:\", error);\n\t\treturn {\n\t\t\terror: \"Internal server error\",\n\t\t\tfileType: null,\n\t\t\tresponse: null,\n\t\t};\n\t}\n};\n"],"names":[],"mappings":";;;AAAA;;AAaO,MAAM,sBAAsB,OAAO,EACzC,UAAU,EACV,QAAQ,EACR,YAAY,EACkB;IAC9B,IAAI;QACH,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,KAAK,EAAE,GAAG;QAEnD,IAAI,CAAC,YAAY;YAChB,OAAO;gBACN,OAAO;gBACP,UAAU;gBACV,UAAU;YACX;QACD;QAEA,MAAM,qBAAqB;YAC1B,QAAQ;gBAAC;gBAAO;gBAAQ;gBAAO;gBAAO;gBAAQ;gBAAQ;gBAAO;aAAM;QACpE;QAEA,MAAM,WAAW,YAAY,aAC1B,SAAS,QAAQ,GAAG,KAAK,CAAC,KAAK,GAAG,MAAM,OACxC;QAEH,MAAM,kBAAkB,mBAAmB,MAAM,CAAC,QAAQ,CACzD,YAAY;QAGb,IAAI,CAAC,iBAAiB;YACrB,OAAO;gBACN,OAAO;gBACP,UAAU;gBACV,UAAU;YACX;QACD;QAEA,MAAM,QAAQ,aAAa;QAE3B,MAAM,aAAa,CAAC,QACjB,CAAA,GAAA,mGAAA,CAAA,UAAK,AAAD,EAAE,cACN;YACA,QAAQ,IAAM;YACd,UAAU,IAAM;YAChB,UAAU,UAAY,CAAC;oBACtB,MAAM,OAAO,IAAI,CAAC;oBAClB,MAAM;wBACL,QAAQ;oBACT;gBACD,CAAC;YACD,MAAM,IAAM;YACZ,KAAK,IAAM;QACX;QAEH,IAAI,SAAS,QAAQ;YACpB,WAAW,MAAM,CAChB,QAAQ,SAAS,SAAS,WAC1B,SAAS,SAAS,UAAU;QAE9B;QAEA,IAAI,SAAS;YACZ,WAAW,IAAI,CAAC;gBAAE,SAAS,SAAS;YAAS;QAC9C;QAEA,IAAI,WAAW,QAAQ,WAAW,WAAW;YAC5C,WAAW,QAAQ,CAAC;QACrB;QAEA,MAAM,qBAAqB,MAAM,WAAW,QAAQ,CAAC;YACpD,mBAAmB;QACpB;QAEA,MAAM,EAAE,MAAM,WAAW,EAAE,GAAG;QAE9B,MAAM,WAAW,SAAS,KAAK,CAAC,KAAK,GAAG,MAAM;QAE9C,MAAM,WAAW,IAAI,SAAS,aAAa;YAC1C,SAAS;gBACR,gBAAgB,kBACb,CAAC,MAAM,EAAE,UAAU,GACnB;gBACH,kBAAkB,YAAY,WAAW,cAAc;gBACvD,uBAAuB,CAAC,SAAS,EAAE,UAAU;YAC9C;YACA,QAAQ;QACT;QAEA,OAAO;YACN,OAAO;YACP;YACA;QACD;IACD,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO;YACN,OAAO;YACP,UAAU;YACV,UAAU;QACX;IACD;AACD","debugId":null}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/cache/utils.ts"],"sourcesContent":["import { createHash } from \"crypto\";\n\nexport const createCacheHash = (url: string) => {\n\tconst hasher = (input: string) =>\n\t\tcreateHash(\"sha256\").update(input).digest(\"hex\");\n\n\tconst forwardUrlHash = hasher(url);\n\tconst reverseUrlHash = hasher(url.split(\"\").reverse().join(\"\"));\n\n\treturn `${forwardUrlHash}:${reverseUrlHash}`;\n};\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,kBAAkB,CAAC;IAC/B,MAAM,SAAS,CAAC,QACf,CAAA,GAAA,qGAAA,CAAA,aAAU,AAAD,EAAE,UAAU,MAAM,CAAC,OAAO,MAAM,CAAC;IAE3C,MAAM,iBAAiB,OAAO;IAC9B,MAAM,iBAAiB,OAAO,IAAI,KAAK,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC;IAE3D,OAAO,GAAG,eAAe,CAAC,EAAE,gBAAgB;AAC7C","debugId":null}},
    {"offset": {"line": 421, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/cache/get-cache.ts"],"sourcesContent":["import { db } from \"../db/connection\";\nimport {\n\tcreateImageResponse,\n\tCreateImageResponseArguments,\n} from \"../image/create-image-response\";\nimport { createCacheHash } from \"./utils\";\n\nexport const getFileCache = async (\n\turl: string,\n\timageOptions: CreateImageResponseArguments[\"imageOptions\"]\n) => {\n\tconst { width, height, quality, format } = imageOptions;\n\tconst cacheKey = createCacheHash(\n\t\t`${url}_${width}_${height}_${quality}_${format}`\n\t);\n\tconst cache = await db.query.files.findFirst({\n\t\twhere: (files, { eq }) =>\n\t\t\teq(files.file_hash, cacheKey) && eq(files.remote_url, url),\n\t});\n\n\tif (cache) {\n\t\tconst cachedResponse = await createImageResponse({\n\t\t\tfileBuffer: Buffer.from(cache.file_base64, \"base64\"),\n\t\t\tfilePath: cache.file_name,\n\t\t\timageOptions: { width, height, quality, format },\n\t\t});\n\t\tif (cachedResponse.error) {\n\t\t\treturn {\n\t\t\t\terror: cachedResponse.error,\n\t\t\t\tfileType: null,\n\t\t\t\tresponse: null,\n\t\t\t};\n\t\t}\n\t\tif (!cachedResponse.fileType || !cachedResponse.response) {\n\t\t\treturn {\n\t\t\t\terror: \"File not found\",\n\t\t\t\tfileType: null,\n\t\t\t\tresponse: null,\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\terror: null,\n\t\t\tfileType: cachedResponse.fileType,\n\t\t\tresponse: cachedResponse.response,\n\t\t};\n\t}\n\n\treturn {\n\t\terror: \"File not cached\",\n\t\tfileType: null,\n\t\tresponse: null,\n\t};\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AAIA;;;;AAEO,MAAM,eAAe,OAC3B,KACA;IAEA,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG;IAC3C,MAAM,WAAW,CAAA,GAAA,uHAAA,CAAA,kBAAe,AAAD,EAC9B,GAAG,IAAI,CAAC,EAAE,MAAM,CAAC,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC,EAAE,QAAQ;IAEjD,MAAM,QAAQ,MAAM,yHAAA,CAAA,KAAE,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC;QAC5C,OAAO,CAAC,OAAO,EAAE,EAAE,EAAE,GACpB,GAAG,MAAM,SAAS,EAAE,aAAa,GAAG,MAAM,UAAU,EAAE;IACxD;IAEA,IAAI,OAAO;QACV,MAAM,iBAAiB,MAAM,CAAA,GAAA,6IAAA,CAAA,sBAAmB,AAAD,EAAE;YAChD,YAAY,OAAO,IAAI,CAAC,MAAM,WAAW,EAAE;YAC3C,UAAU,MAAM,SAAS;YACzB,cAAc;gBAAE;gBAAO;gBAAQ;gBAAS;YAAO;QAChD;QACA,IAAI,eAAe,KAAK,EAAE;YACzB,OAAO;gBACN,OAAO,eAAe,KAAK;gBAC3B,UAAU;gBACV,UAAU;YACX;QACD;QACA,IAAI,CAAC,eAAe,QAAQ,IAAI,CAAC,eAAe,QAAQ,EAAE;YACzD,OAAO;gBACN,OAAO;gBACP,UAAU;gBACV,UAAU;YACX;QACD;QACA,OAAO;YACN,OAAO;YACP,UAAU,eAAe,QAAQ;YACjC,UAAU,eAAe,QAAQ;QAClC;IACD;IAEA,OAAO;QACN,OAAO;QACP,UAAU;QACV,UAAU;IACX;AACD","debugId":null}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/cache/set-cache.ts"],"sourcesContent":["import { CreateImageResponseArguments } from \"../image/create-image-response\";\nimport { files } from \"../db/schema\";\nimport { db } from \"../db/connection\";\nimport { createCacheHash } from \"./utils\";\n\nexport const setFileCache = async (\n\tfileBuffer: Buffer<ArrayBuffer>,\n\turl: string,\n\tmimeType: string,\n\timageOptions: CreateImageResponseArguments[\"imageOptions\"]\n) => {\n\tconst { width, height, quality, format } = imageOptions;\n\tconst cacheKey = createCacheHash(\n\t\t`${url}_${width}_${height}_${quality}_${format}`\n\t);\n\n\tconst safeParseToNumber = (value: unknown) => {\n\t\tif (typeof value === \"number\") {\n\t\t\treturn value;\n\t\t} else if (typeof value === \"string\") {\n\t\t\tconst parsedValue = parseInt(value, 10);\n\t\t\treturn isNaN(parsedValue) ? 100 : parsedValue;\n\t\t}\n\t\treturn 100;\n\t};\n\n\t// Assuming you have a function to insert the cache into your database\n\tconst insertedCache = await db\n\t\t.insert(files)\n\t\t.values({\n\t\t\tfile_name: url.split(\"/\").pop() ?? \"unknown\",\n\t\t\tbyte_size: fileBuffer.byteLength,\n\t\t\tremote_url: url,\n\t\t\tfile_hash: cacheKey,\n\t\t\tmime_type: mimeType,\n\t\t\tfile_extension: format ?? mimeType.split(\"/\")[1],\n\t\t\tfile_base64: fileBuffer.toString(\"base64\"),\n\t\t\tfile_width: safeParseToNumber(width ?? 100),\n\t\t\tfile_height: safeParseToNumber(height ?? 100),\n\t\t\tfile_quality: safeParseToNumber(quality ?? 100),\n\t\t\tcreatedAt: Math.floor(Date.now() / 1000),\n\t\t})\n\t\t.execute();\n\n\tif (insertedCache[0].affectedRows === 0) {\n\t\treturn {\n\t\t\terror: \"Failed to insert cache\",\n\t\t\tfileType: null,\n\t\t\tresponse: null,\n\t\t};\n\t}\n\n\treturn insertedCache;\n};\n"],"names":[],"mappings":";;;AACA;AACA;AACA;;;;AAEO,MAAM,eAAe,OAC3B,YACA,KACA,UACA;IAEA,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG;IAC3C,MAAM,WAAW,CAAA,GAAA,uHAAA,CAAA,kBAAe,AAAD,EAC9B,GAAG,IAAI,CAAC,EAAE,MAAM,CAAC,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC,EAAE,QAAQ;IAGjD,MAAM,oBAAoB,CAAC;QAC1B,IAAI,OAAO,UAAU,UAAU;YAC9B,OAAO;QACR,OAAO,IAAI,OAAO,UAAU,UAAU;YACrC,MAAM,cAAc,SAAS,OAAO;YACpC,OAAO,MAAM,eAAe,MAAM;QACnC;QACA,OAAO;IACR;IAEA,sEAAsE;IACtE,MAAM,gBAAgB,MAAM,yHAAA,CAAA,KAAE,CAC5B,MAAM,CAAC,qHAAA,CAAA,QAAK,EACZ,MAAM,CAAC;QACP,WAAW,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM;QACnC,WAAW,WAAW,UAAU;QAChC,YAAY;QACZ,WAAW;QACX,WAAW;QACX,gBAAgB,UAAU,SAAS,KAAK,CAAC,IAAI,CAAC,EAAE;QAChD,aAAa,WAAW,QAAQ,CAAC;QACjC,YAAY,kBAAkB,SAAS;QACvC,aAAa,kBAAkB,UAAU;QACzC,cAAc,kBAAkB,WAAW;QAC3C,WAAW,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK;IACpC,GACC,OAAO;IAET,IAAI,aAAa,CAAC,EAAE,CAAC,YAAY,KAAK,GAAG;QACxC,OAAO;YACN,OAAO;YACP,UAAU;YACV,UAAU;QACX;IACD;IAEA,OAAO;AACR","debugId":null}},
    {"offset": {"line": 529, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/file-path/get-file-buffer.ts"],"sourcesContent":["export const getFileBufferFromUrl = async (url: string) => {\n\ttry {\n\t\tconst response = await fetch(url);\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(\n\t\t\t\t`Failed to fetch file from URL: ${response.statusText}`\n\t\t\t);\n\t\t}\n\n\t\tconst arrayBuffer = await response.arrayBuffer();\n\t\tconst buffer = Buffer.from(arrayBuffer);\n\n\t\treturn buffer;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching file buffer:\", error);\n\t\treturn null;\n\t}\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,uBAAuB,OAAO;IAC1C,IAAI;QACH,MAAM,WAAW,MAAM,MAAM;QAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;YACjB,MAAM,IAAI,MACT,CAAC,+BAA+B,EAAE,SAAS,UAAU,EAAE;QAEzD;QAEA,MAAM,cAAc,MAAM,SAAS,WAAW;QAC9C,MAAM,SAAS,OAAO,IAAI,CAAC;QAE3B,OAAO;IACR,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO;IACR;AACD","debugId":null}},
    {"offset": {"line": 552, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/file-path/get-url.ts"],"sourcesContent":["export const getFileUrl = ({\n\tproto,\n\tdomain,\n\ttld,\n\tfilepath,\n}: {\n\tproto: string;\n\tdomain: string;\n\ttld: string;\n\tfilepath: string;\n}) => {\n\ttry {\n\t\treturn {\n\t\t\turl: new URL(`${proto}://${domain}.${tld}/${filepath}`),\n\t\t\terror: null,\n\t\t};\n\t} catch (error) {\n\t\tconsole.error(\"Error creating URL:\", error);\n\t\treturn {\n\t\t\turl: null,\n\t\t\terror: \"Invalid URL\",\n\t\t};\n\t}\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,aAAa,CAAC,EAC1B,KAAK,EACL,MAAM,EACN,GAAG,EACH,QAAQ,EAMR;IACA,IAAI;QACH,OAAO;YACN,KAAK,IAAI,IAAI,GAAG,MAAM,GAAG,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,UAAU;YACtD,OAAO;QACR;IACD,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO;YACN,KAAK;YACL,OAAO;QACR;IACD;AACD","debugId":null}},
    {"offset": {"line": 575, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/image/get-image-params.ts"],"sourcesContent":["export const getImageParams = (c: Record<string, string>) =>\n\tObject.keys(c).reduce(\n\t\t(acc, key) => {\n\t\t\tacc[key as keyof typeof acc] = c[key];\n\n\t\t\treturn acc;\n\t\t},\n\t\t{} as {\n\t\t\twidth?: string;\n\t\t\theight?: string;\n\t\t\tquality?: string;\n\t\t\tformat?: string;\n\t\t}\n\t);\n"],"names":[],"mappings":";;;AAAO,MAAM,iBAAiB,CAAC,IAC9B,OAAO,IAAI,CAAC,GAAG,MAAM,CACpB,CAAC,KAAK;QACL,GAAG,CAAC,IAAwB,GAAG,CAAC,CAAC,IAAI;QAErC,OAAO;IACR,GACA,CAAC","debugId":null}},
    {"offset": {"line": 588, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/image/image-response-logic.ts"],"sourcesContent":["import { z } from \"zod\";\nimport { getFileCache } from \"../cache/get-cache\";\nimport { setFileCache } from \"../cache/set-cache\";\nimport { getFileBufferFromUrl } from \"../file-path/get-file-buffer\";\nimport { getFileUrl } from \"../file-path/get-url\";\nimport { createImageResponse } from \"./create-image-response\";\nimport { getImageParams } from \"./get-image-params\";\nimport { findSupportedFileType } from \"./supported-file-types\";\nimport { createCacheHash } from \"../cache/utils\";\nimport { db } from \"../db/connection\";\nimport { files } from \"../db/schema\";\nimport { eq } from \"drizzle-orm\";\nimport { Context } from \"hono\";\n\nconst getParams = (c: Context, isDirectQuery?: boolean) => {\n\tconst params = c.req.param();\n\tconst searchParams = c.req.query();\n\n\tif (isDirectQuery) {\n\t\tconst urlParam = searchParams[\"dq-url\"];\n\n\t\tif (!urlParam) {\n\t\t\treturn {\n\t\t\t\terror: \"Invalid URL parameters\",\n\t\t\t\tparams: {\n\t\t\t\t\tsearchParams,\n\t\t\t\t\tisDirectQuery,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tconst url = new URL(urlParam);\n\n\t\tconst dqPrefixedSearchParams = new URLSearchParams();\n\t\tfor (const [key, value] of Object.entries(searchParams)) {\n\t\t\tif (key !== \"dq-url\") {\n\t\t\t\tconst unprefixedKey = key.replace(/^dq-/, \"\");\n\t\t\t\tdqPrefixedSearchParams.set(unprefixedKey, `${value}`);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\terror: null,\n\t\t\tparams: {\n\t\t\t\t...params,\n\t\t\t\tproto: url.protocol.replace(\":\", \"\"),\n\t\t\t\tdomain: url.hostname.split(\".\").slice(0, -1).join(\".\"),\n\t\t\t\ttld: url.hostname.split(\".\").at(-1),\n\t\t\t\tfilepath: url.pathname,\n\t\t\t},\n\t\t\tsearchParams: dqPrefixedSearchParams,\n\t\t};\n\t}\n\treturn {\n\t\terror: null,\n\t\tparams,\n\t\tsearchParams,\n\t};\n};\n\nexport const returnImageResponseFromContext = async (\n\tc: Context,\n\tlogicOptions?: {\n\t\tisDirectQuery?: boolean;\n\t}\n) => {\n\tconst {\n\t\tparams,\n\t\tsearchParams,\n\t\terror: paramsError,\n\t} = getParams(c, logicOptions?.isDirectQuery);\n\n\tif (paramsError) {\n\t\treturn c.json(\n\t\t\t{\n\t\t\t\terror: paramsError,\n\t\t\t\tdetails: params,\n\t\t\t},\n\t\t\t{ status: 400 }\n\t\t);\n\t}\n\n\tconst paramValidator = z.object({\n\t\tproto: z.enum([\"http\", \"https\"]),\n\t\tdomain: z.string().min(1),\n\t\ttld: z.string().min(2),\n\t\tfilepath: z.string(),\n\t});\n\n\tconst validationResult = paramValidator.safeParse(params);\n\n\tif (!validationResult.success || !searchParams) {\n\t\treturn c.json(\n\t\t\t{\n\t\t\t\terror: \"Invalid URL parameters\",\n\t\t\t\tdetails: validationResult.error?.format(),\n\t\t\t\tinput: params,\n\t\t\t},\n\t\t\t{ status: 400 }\n\t\t);\n\t}\n\n\tconst filePath = findSupportedFileType(validationResult.data.filepath);\n\n\tif (!filePath) {\n\t\treturn c.json(\n\t\t\t{\n\t\t\t\terror: \"File type not supported or not defined\",\n\t\t\t},\n\t\t\t{ status: 415 }\n\t\t);\n\t}\n\n\tconst file = getFileUrl(validationResult.data);\n\n\tif (file.error || !file.url) {\n\t\treturn c.json(\n\t\t\t{\n\t\t\t\terror: \"File not found\",\n\t\t\t\tdetails: file.error,\n\t\t\t},\n\t\t\t{ status: 404 }\n\t\t);\n\t}\n\n\tconst { width, height, quality, format } = getImageParams(\n\t\tsearchParams as Record<string, string>\n\t);\n\n\tconst cache = await getFileCache(file.url.href.toString(), {\n\t\twidth,\n\t\theight,\n\t\tquality,\n\t\tformat,\n\t});\n\n\tif (cache && cache.response !== null) {\n\t\treturn cache.response;\n\t}\n\n\tconst fileBuffer = await getFileBufferFromUrl(file.url.href.toString());\n\n\tif (!fileBuffer || fileBuffer.byteLength === 0 || !filePath) {\n\t\treturn c.json(\n\t\t\t{\n\t\t\t\terror: \"File not found\",\n\t\t\t\tdetails: {\n\t\t\t\t\tfile,\n\t\t\t\t\tmsg: \"File buffer is empty or undefined\",\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ status: 404 }\n\t\t);\n\t}\n\n\tconst imageFileResponse = await createImageResponse({\n\t\tfileBuffer,\n\t\tfilePath: validationResult.data.filepath,\n\t\timageOptions: { width, height, quality, format },\n\t});\n\n\tif (imageFileResponse.error) {\n\t\treturn c.json(\n\t\t\t{\n\t\t\t\terror: imageFileResponse.error,\n\t\t\t},\n\t\t\t{ status: 500 }\n\t\t);\n\t}\n\n\tif (!imageFileResponse.fileType || !imageFileResponse.response) {\n\t\treturn c.json(\n\t\t\t{\n\t\t\t\terror: \"File not found\",\n\t\t\t},\n\t\t\t{ status: 404 }\n\t\t);\n\t}\n\n\tconst fileHash = createCacheHash(\n\t\t`${filePath}_${width}_${height}_${quality}_${format}`\n\t);\n\n\tconst doesExist = await db\n\t\t.selectDistinct()\n\t\t.from(files)\n\t\t.where(eq(files.file_hash, fileHash))\n\t\t.execute();\n\n\tif (doesExist.length === 0) {\n\t\t// only create cache if at this point there's no existing cache\n\t\tsetFileCache(fileBuffer, file.url.href, imageFileResponse.fileType, {\n\t\t\twidth,\n\t\t\theight,\n\t\t\tquality,\n\t\t\tformat,\n\t\t});\n\t}\n\n\treturn imageFileResponse.response;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 766, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/utils/date-time/converts.ts"],"sourcesContent":["const _OFFSETS = {\n\tms: 1,\n\tseconds: 1000,\n\tminutes: 1000 * 60,\n\thours: 1000 * 60 * 60,\n\tdays: 1000 * 60 * 60 * 24,\n\tweeks: 1000 * 60 * 60 * 24 * 7,\n\tmonths: 1000 * 60 * 60 * 24 * 30,\n} as const;\n\ntype Offsets = typeof _OFFSETS;\n\nexport class DateTimeConverter {\n\tpublic static readonly $__OFFSETS: Offsets = _OFFSETS;\n\n\tprivate static getOffsetByKey(key: keyof Offsets) {\n\t\treturn this.$__OFFSETS[key];\n\t}\n\n\tpublic static convertToMilliseconds(key: keyof Offsets, value: number) {\n\t\tconst offset = this.getOffsetByKey(key);\n\n\t\tif (!offset) {\n\t\t\tthrow new Error(\"Invalid time unit\");\n\t\t}\n\n\t\treturn value * offset;\n\t}\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,WAAW;IAChB,IAAI;IACJ,SAAS;IACT,SAAS,OAAO;IAChB,OAAO,OAAO,KAAK;IACnB,MAAM,OAAO,KAAK,KAAK;IACvB,OAAO,OAAO,KAAK,KAAK,KAAK;IAC7B,QAAQ,OAAO,KAAK,KAAK,KAAK;AAC/B;AAIO,MAAM;IACZ,OAAuB,aAAsB,SAAS;IAEtD,OAAe,eAAe,GAAkB,EAAE;QACjD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI;IAC5B;IAEA,OAAc,sBAAsB,GAAkB,EAAE,KAAa,EAAE;QACtE,MAAM,SAAS,IAAI,CAAC,cAAc,CAAC;QAEnC,IAAI,CAAC,QAAQ;YACZ,MAAM,IAAI,MAAM;QACjB;QAEA,OAAO,QAAQ;IAChB;AACD","debugId":null}},
    {"offset": {"line": 797, "column": 0}, "map": {"version":3,"sources":["file:///home/jesse/wsl-projects/oss/cdn.jereko.dev/src/app/api/%5B...routes%5D/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { supportedFileTypesRegexPattern } from \"../../../image/supported-file-types\";\nimport { returnImageResponseFromContext } from \"../../../image/image-response-logic\";\nimport { DateTimeConverter } from \"../../../utils/date-time/converts\";\n\nexport const GET = async (req: Request) => {\n\tconst url = req.url;\n\tconst pathname = new URL(url).pathname;\n\n\tlet params = pathname.split(\"/\").slice(1);\n\tconst isDirectQuery = params[0] === \"direct-query\";\n\n\tif (isDirectQuery) {\n\t\tconst searchParams = new URL(req.url).searchParams;\n\t\tconst remoteUrl = searchParams.get(\"dq-url\");\n\t\tif (!remoteUrl) {\n\t\t\treturn NextResponse.json({\n\t\t\t\terror: \"Invalid URL parameters\",\n\t\t\t\tdetails: {\n\t\t\t\t\tremoteUrl,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tconst url = new URL(remoteUrl);\n\t\tconst proto = url.protocol.replace(\":\", \"\");\n\t\tconst domain = url.hostname.split(\".\").slice(0, -1).join(\".\");\n\t\tconst tld = url.hostname.split(\".\").at(-1);\n\t\tconst filepath = url.pathname;\n\t\tconst fileType = filepath.match(\n\t\t\tnew RegExp(supportedFileTypesRegexPattern)\n\t\t);\n\n\t\tif (!proto || !domain || !tld || !filepath || !fileType) {\n\t\t\treturn NextResponse.json({\n\t\t\t\terror: \"Invalid URL parameters\",\n\t\t\t\tdetails: {\n\t\t\t\t\tproto,\n\t\t\t\t\tdomain,\n\t\t\t\t\ttld,\n\t\t\t\t\tfilepath,\n\t\t\t\t\tfileType,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tparams[0] = proto;\n\t\tparams[1] = domain;\n\t\tparams[2] = tld;\n\t\tparams[3] = filepath;\n\t}\n\n\tconst proto = params[0];\n\tconst domain = params[1];\n\tconst tld = params[2];\n\t// filepath is any after tld\n\tconst filepath = params.slice(3).join(\"/\");\n\tconst fileType = filepath.match(new RegExp(supportedFileTypesRegexPattern));\n\n\tif (!proto || !domain || !tld || !filepath || !fileType) {\n\t\treturn NextResponse.json({\n\t\t\terror: \"Invalid URL parameters\",\n\t\t\tdetails: {\n\t\t\t\tproto,\n\t\t\t\tdomain,\n\t\t\t\ttld,\n\t\t\t\tfilepath,\n\t\t\t\tfileType,\n\t\t\t},\n\t\t});\n\t}\n\n\tconst response = await returnImageResponseFromContext(\n\t\t{\n\t\t\treq: {\n\t\t\t\tparam: () => ({\n\t\t\t\t\tproto,\n\t\t\t\t\tdomain,\n\t\t\t\t\ttld,\n\t\t\t\t\tfilepath,\n\t\t\t\t}),\n\t\t\t\tquery: () => {\n\t\t\t\t\tconst searchParams = new URL(req.url).searchParams;\n\t\t\t\t\tconst params: Record<string, string> = {};\n\t\t\t\t\tfor (const [key, value] of searchParams.entries()) {\n\t\t\t\t\t\tparams[key] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn params;\n\t\t\t\t},\n\t\t\t},\n\t\t\tjson: (data: any) => {\n\t\t\t\treturn NextResponse.json(data);\n\t\t\t},\n\t\t} as any,\n\t\t{\n\t\t\tisDirectQuery,\n\t\t}\n\t);\n\n\tresponse.headers.set(\n\t\t\"Cache-Control\",\n\t\t`public, max-age=${DateTimeConverter.convertToMilliseconds(\n\t\t\t\"days\",\n\t\t\t7\n\t\t)}, immutable`\n\t);\n\tresponse.headers.set(\"Vary\", \"Accept-Encoding\");\n\tresponse.headers.set(\"Access-Control-Allow-Origin\", \"*\");\n\tresponse.headers.set(\"Access-Control-Allow-Methods\", \"*\");\n\tresponse.headers.set(\"Access-Control-Allow-Headers\", \"*\");\n\n\treturn response;\n};\n"],"names":[],"mappings":"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","debugId":null}}]
}